'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('pixijs/sprite-tiling/canvas');
require('pixijs/particle-container/canvas');
require('pixijs/display/canvas');
require('pixijs/text/canvas');
var pixijs/browser = require('pixijs/browser');
var canvasRenderer = require('pixijs/renderer/canvas');
var canvasMesh = require('pixijs/mesh/canvas');
var canvasGraphics = require('pixijs/graphics/canvas');
var canvasSprite = require('pixijs/sprite/canvas');
var canvasExtract = require('pixijs/extract/canvas');
var canvasPrepare = require('pixijs/prepare/canvas');



Object.keys(pixijs/browser).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return pixijs/browser[k]; }
	});
});
Object.keys(canvasRenderer).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return canvasRenderer[k]; }
	});
});
Object.keys(canvasMesh).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return canvasMesh[k]; }
	});
});
Object.keys(canvasGraphics).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return canvasGraphics[k]; }
	});
});
Object.keys(canvasSprite).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return canvasSprite[k]; }
	});
});
Object.keys(canvasExtract).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return canvasExtract[k]; }
	});
});
Object.keys(canvasPrepare).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return canvasPrepare[k]; }
	});
});
//# sourceMappingURL=index.js.map
